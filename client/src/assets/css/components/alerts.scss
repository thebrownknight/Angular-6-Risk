.rs-box {
    position: fixed;
    line-height: 1.4;
    z-index: 1000;
    pointer-events: auto;
    box-shadow: 0px 1px 4px $dark-gray;
    bottom: 10px;
    left: 1%;
    width: 300px;
    @include rem(padding, 15px);

    .alert-content {
        @include flexbox();
        @include justify-content(flex-start);
        @include align-items(center);
        @include flex-wrap(wrap);

        .btn {
            width: 100%;
            @include rem(margin-top, 15px);
        }
    }

    .rs-close {
        cursor: pointer;
        background: transparent;
        top: 20px;
        right: 10px;
        width: 20px;
        height: 20px;
        @include transform(translateY(-50%));
        position: absolute;
        overflow: hidden;
        -webkit-backface-visibility: hidden;
        backface-visibility: hidden;

        &:hover, &:focus {
            outline: none;

            > i {
                color: darken($vermillion, 10%);
            }
        }

        > i {
            @include transition(color 0.2s);
            color: $vermillion;
            @include rem(font-size, 20px);
        }
    }

    &.rs-effect-slidetop {
        @include animation(animSlideTop);
        @include animation-duration(0.3s);

        .icon-container {
            text-align: center;
            @include rem(padding, 3px 0 0);

            .icon {
                @include rem(font-size, 24px);
            }
        }

        .icon, p {
            @include animation-name(animScaleUp);
            @include animation-duration(0.3s);
            @include animation-delay(0.2s);
            @include animation-fill-mode(both);
        }
        p {
            @include rem(margin, 0 0 0 15px);
            @include rem(padding, 0 30px 0 0);
            @include rem(font-size, 16px);
            @include raleway-regular();
            @include animation-name(animFade);
            @include flex(1);
        }

        /** Dice rolls specific CSS **/
        .dice-rolls {
            .dice-rolls-label {
                width: 128px;
                display: inline-block;
            }
        }
    }

    &.rs-hide {
        @include animation-direction(reverse);
    }

    // Styles for different alert types
    &.rs-alert-success {
        background: $powder;

        .icon-container {
            // background: darken($aqua, 10%);

            .icon {
                color: $white;
            }
        }

        p {
            color: $white;
        }

        .rs-close {
            &:hover, &:focus {
                > i {
                    color: darken($white, 10%);
                }
            }
    
            > i {
                @include transition(color 0.2s);
                color: $white;
                @include rem(font-size, 20px);
            }
        }
    }
    &.rs-alert-warning {
        background: $light-gray;

        .icon-container {

            .icon {
                color: $vermillion;
            }
        }

        p {
            color: $dark-gray;
        }

        .rs-close {
            &:hover, &:focus {
                > i {
                    color: darken($vermillion, 10%);
                }
            }
    
            > i {
                @include transition(color 0.2s);
                color: $vermillion;
                @include rem(font-size, 20px);
            }
        }
    }
    &.rs-alert-error {
        background: $vermillion;

        .icon-container {

            .icon {
                color: $white;
            }
        }

        p {
            color: $white;
        }

        .rs-close {
            &:hover, &:focus {
                > i {
                    color: darken($white, 10%);
                }
            }
    
            > i {
                @include transition(color 0.2s);
                color: $white;
                @include rem(font-size, 20px);
            }
        }
    }
}

@include keyframes(animFade) {
    0% { opacity: 0; }
	100% { opacity: 1; }
}

@include keyframes(animScaleUp) {
    0% {
        opacity: 0;
        @include transform(scale3d(0, 0, 1));
    }

    100% {
        opacity: 1;
        @include transform(scale3d(1, 1, 1));
    }
}

@include keyframes(animSlideTop) {
    0% {
        @include transform(translate3d(0, -100%, 0));
    }
    100% {
        @include transform(translate3d(0, 0, 0));
    }
}