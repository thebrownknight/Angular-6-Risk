//-----------------------------
// Helpers
//-----------------------------
@mixin box-sizing($box-model) {
    -webkit-box-sizing: $box-model; // Safari <= 5
       -moz-box-sizing: $box-model; // Firefox <= 19
            box-sizing: $box-model;
}

@mixin border-radius($radius) {
    -webkit-border-radius: $radius;
    border-radius: $radius;
    background-clip: padding-box;   /* stops bg color from leaking outside the border. */
}

@mixin appearance($value) {
    -webkit-appearance: $value;
            appearance: $value;
}

@mixin backface-visibility($value) {
    -webkit-backface-visibility: $value;
	   -moz-backface-visibility: $value;
	        backface-visibility: $value;
}

@mixin opacity($opacity) {
    opacity: $opacity;
    $opacity-ie: $opacity * 100;
    filter: alpha(opacity=$opacity-ie); // IE8
}

@mixin abs-pos($top: auto, $right: auto, $bottom: auto, $left: auto) {
    top: $top;
    right: $right;
    bottom: $bottom;
    left: $left;
    position: absolute;
}

@mixin font-size($sizeValue: 14) {
    font-size: $sizeValue + px; //fallback for older browsers
    font-size: (0.125 * $sizeValue) + rem;
}

@mixin transform($transforms) {
	-webkit-transform: $transforms;
	   -moz-transform: $transforms;
	    -ms-transform: $transforms;
            transform: $transforms;
}

@mixin transform-origin($origin) {
    -webkit-transform-origin: $origin;
            transform-origin: $origin;
}

@mixin transition($transition...) {
    -moz-transition:    $transition;
    -o-transition:      $transition;
    -webkit-transition: $transition;
    transition:         $transition;
}

@mixin user-select($value) {
    -webkit-user-select: $value;
	-khtml-user-select: $value;
	-moz-user-select: $value;
	-ms-user-select: $value;
	user-select: $value;
}

@mixin placeholder($color, $weight) {
    &:-moz-placeholder {
        color: $color;
        font-weight: $weight;
    }

    &::-webkit-input-placeholder {
        color: $color;
        font-weight: $weight;
    }
}

@mixin clearfix() {
    &:before,
    &:after {
        content: "";
        display: table;
    }
    &:after {
        clear: both;
    }
}

// Create rem values with px fallback
// Usage: @include rem($property, $values);
// Example Usage:
//    @include rem(font-size, 16px);
//    @include rem(margin, 0 24px 0 12px);
@function parseInt($n) {
    @return $n / ($n * 0 + 1);
}

@mixin rem($property, $values) {
    $px : ();
    $rem: ();

    $root: $base-font-size;

    @each $value in $values {
        @if $value == 0 or $value == auto {
            $px : append($px, $value);
            $rem: append($rem, $value);
        }
        @else if type-of($value) ==  number {
            $unit: unit($value);
            $val: parseInt($value);

            @if $unit == 'px' {
                $px : append($px, $value);
                $rem: append($rem, ($val / $root + rem));
            }

            @if $unit == 'rem' {
                $px : append($px, ($val * $root + px));
                $rem: append($rem, $value);
            }
        }
        @else {
            $px : append($px, $value);
            $rem: append($px, $value);
        }
    }

    @if $px == $rem {
        #{$property}: $px;
    } @else {
        #{$property}: $px;
        #{$property}: $rem;
    }
}

//-----------------------------
// Font Mixins
//-----------------------------
@mixin breeserif() {
    font-family: 'Bree Serif', serif;
}
@mixin opensans() {
    font-family: 'Open Sans', sans-serif;
}
@mixin opensans-regular() {
    @include opensans();
    font-weight: 400;
}
@mixin opensans-semibold() {
    @include opensans();
    font-weight: 600;
}
@mixin opensans-bold() {
    @include opensans();
    font-weight: 700;
}
@mixin raleway() {
    font-family: 'Raleway', sans-serif;
}
@mixin raleway-regular() {
    @include raleway();
    font-weight: 400;
}
@mixin raleway-semibold() {
    @include raleway();
    font-weight: 600;
}
@mixin raleway-bold() {
    @include raleway();
    font-weight: 700;
}

//-----------------------------
// Animation Mixins
//-----------------------------
@mixin keyframes($animation) {
    @-webkit-keyframes #{$animation} {
        @content;
    }

    @-moz-keyframes #{$animation} {
        @content;
    }

    @-o-keyframes #{$animation} {
        @content;
    }

    @keyframes #{$animation} {
        @content;
    }
}

@mixin animation($value) {
    -webkit-animation: #{$value};
       -moz-animation: #{$value};
        -ms-animation: #{$value};
         -o-animation: #{$value};
            animation: #{$value};
}


//-----------------------------
// Media Queries
//-----------------------------
@mixin mq($width, $type: min) {
    @if map-has-key($breakpoints, $width) {
        $width: map-get($breakpoints, $width);
        @if $type == max {
            $width: $width - 1px;
        }
        @media only screen and (#{$type}-width: $width) {
            @content;
        }
    }
}

// --------------------------------------------------
// Flexbox mixins
// The spec: http://www.w3.org/TR/css3-flexbox
// --------------------------------------------------

// Flexbox display
@mixin flexbox() {
    display: -webkit-box;
    display: -moz-box;
    display: -ms-flexbox;
    display: -webkit-flex;
    display: flex;
}

// The 'flex' shorthand
// - applies to flex items
// <positive number>, initial, auto or none
@mixin flex($values) {
    -webkit-box-flex: $values;
       -moz-box-flex: $values;
        -webkit-flex: $values;
            -ms-flex: $values;
                flex: $values;
}

// Flex Flow Direction
// - applies to: flex containers
// row | row-reverse | column | column-reverse
@mixin flex-direction($direction) {
  -webkit-flex-direction: $direction;
     -moz-flex-direction: $direction;
      -ms-flex-direction: $direction;
          flex-direction: $direction;
}

// Flex Line Wrapping
// - applies to: flex containers
// nowrap | wrap | wrap-reverse
@mixin flex-wrap($wrap) {
  -webkit-flex-wrap: $wrap;
     -moz-flex-wrap: $wrap;
      -ms-flex-wrap: $wrap;
          flex-wrap: $wrap;
}

// Flex Direction and Wrap
// - applies to: flex containers
// <flex-direction> || <flex-wrap>
@mixin flex-flow($flow) {
  -webkit-flex-flow: $flow;
     -moz-flex-flow: $flow;
      -ms-flex-flow: $flow;
          flex-flow: $flow;
}

// Display Order
// - applies to: flex items
// <integer>
@mixin order($val) {
  -webkit-box-ordinal-group: $val;
     -moz-box-ordinal-group: $val;
  	     -ms-flex-order: $val;
  	      -webkit-order: $val;
  		      order: $val;
}

// Flex grow factor
// - applies to: flex items
// <number>
@mixin flex-grow($grow) {
  -webkit-flex-grow: $grow;
     -moz-flex-grow: $grow;
      -ms-flex-grow: $grow;
          flex-grow: $grow;
}

// Flex shrink
// - applies to: flex item shrink factor
// <number>
@mixin flex-shrink($shrink) {
  -webkit-flex-shrink: $shrink;
     -moz-flex-shrink: $shrink;
      -ms-flex-shrink: $shrink;
          flex-shrink: $shrink;
}

// Flex basis
// - the initial main size of the flex item
// - applies to: flex itemsnitial main size of the flex item
// <width>
@mixin flex-basis($width) {
  -webkit-flex-basis: $width;
     -moz-flex-basis: $width;
      -ms-flex-basis: $width;
          flex-basis: $width;
}

// Axis Alignment
// - applies to: flex containers
// flex-start | flex-end | center | space-between | space-around
@mixin justify-content($justify) {
  -webkit-justify-content: $justify;
     -moz-justify-content: $justify;
      -ms-justify-content: $justify;
          justify-content: $justify;
            -ms-flex-pack: $justify;
}

// Packing Flex Lines
// - applies to: multi-line flex containers
// flex-start | flex-end | center | space-between | space-around | stretch
@mixin align-content($align) {
  -webkit-align-content: $align;
     -moz-align-content: $align;
      -ms-align-content: $align;
          align-content: $align;
}

// Cross-axis Alignment
// - applies to: flex containers
// flex-start | flex-end | center | baseline | stretch
@mixin align-items($align) {
  -webkit-align-items: $align;
     -moz-align-items: $align;
      -ms-align-items: $align;
          align-items: $align;
}

// Cross-axis Alignment
// - applies to: flex items
// auto | flex-start | flex-end | center | baseline | stretch
@mixin align-self($align) {
  -webkit-align-self: $align;
     -moz-align-self: $align;
      -ms-align-self: $align;
          align-self: $align;
}
